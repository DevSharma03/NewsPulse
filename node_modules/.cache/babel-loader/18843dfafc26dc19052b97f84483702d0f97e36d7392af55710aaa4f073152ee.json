{"ast":null,"code":"var _jsxFileName = \"E:\\\\PROGRAMMING\\\\Web Development\\\\React.js\\\\project-2\\\\src\\\\Components\\\\News.js\";\nimport React, { Component } from \"react\";\nimport Newsitems from \"./Newsitems\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class News extends Component {\n  // Initialize the state in the constructor\n  constructor() {\n    super();\n    // Event handler for \"Next Page\" button\n    this.handleNextClick = () => {\n      const nextPage = this.state.page + 1;\n      // Ensure the next page does not exceed the total pages available\n      if (nextPage <= Math.ceil(this.state.totalArticles / this.props.pageSize)) {\n        this.updateNews(nextPage);\n      }\n    };\n    // Event handler for \"Previous Page\" button\n    this.handlePreviousClick = () => {\n      const previousPage = this.state.page - 1;\n      // Ensure the previous page is not less than 1\n      if (previousPage >= 1) {\n        this.updateNews(previousPage);\n      }\n    };\n    this.state = {\n      articles: [],\n      // Holds the news articles fetched from the API\n      loading: false,\n      // Loading state to manage the spinner or indicator\n      page: 1,\n      // Current page for pagination\n      totalArticles: 0 // Total number of articles available\n    };\n  }\n\n  /**\r\n   * Function to fetch and update news articles.\r\n   * Accepts an optional page number as a parameter.\r\n   */\n  async updateNews(page = this.state.page) {\n    // Destructure props for cleaner code\n    const {\n      country,\n      category,\n      pageSize\n    } = this.props;\n\n    // Construct the API URL with query parameters\n    let url = `https://newsapi.org/v2/top-headlines?country=${country}&category=${category}&apiKey=062cfa709b6d45a68425747443409336&page=${page}&pageSize=${pageSize}`;\n\n    // Set the loading state to true before making the API call\n    this.setState({\n      loading: true\n    });\n    try {\n      // Fetch data from the API\n      let response = await fetch(url);\n      let parsedData = await response.json(); // Parse the JSON response\n\n      // Update the state with the fetched articles and total results\n      this.setState({\n        articles: parsedData.articles,\n        totalArticles: parsedData.totalResults,\n        loading: false,\n        // Stop loading once data is fetched\n        page: page // Update the current page\n      });\n    } catch (error) {\n      console.error(\"Error fetching news:\", error);\n      this.setState({\n        loading: false\n      }); // Stop loading on error\n    }\n  }\n\n  // Lifecycle method to fetch news after the component mounts\n  componentDidMount() {\n    this.updateNews(); // Initial call to fetch news\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Top News Headlines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), this.state.loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: !this.state.loading && this.state.articles.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-4\",\n          children: /*#__PURE__*/_jsxDEV(Newsitems, {\n            title: element.title ? element.title.slice(0, 40) : \" \",\n            description: element.description ? element.description.slice(0, 80) : \" \",\n            imageUrl: element.urlToImage,\n            newsUrl: element.url,\n            author: element.author,\n            date: element.publishedAt,\n            source: element.source.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)\n        }, element.url, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container d-flex justify-content-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: this.state.page <= 1 // Disable button on the first page\n          ,\n          type: \"button\",\n          onClick: this.handlePreviousClick,\n          className: \"btn btn-dark my-2 mx-2\",\n          children: \"\\u2190 Previous Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          disabled: this.state.page >= Math.ceil(this.state.totalArticles / this.props.pageSize) // Disable button on the last page\n          ,\n          className: \"btn btn-dark my-2 mx-2\",\n          onClick: this.handleNextClick,\n          children: \"Next Page \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  }\n}\n// Default props to define the default values for the component\nNews.defaultProps = {\n  country: \"us\",\n  // Default country is \"us\"\n  pageSize: 9,\n  // Default number of articles per page\n  category: \"general\" // Default category is \"general\"\n};\n// Prop validation for the component\nNews.propTypes = {\n  country: PropTypes.string,\n  pageSize: PropTypes.number,\n  category: PropTypes.string\n};","map":{"version":3,"names":["React","Component","Newsitems","PropTypes","jsxDEV","_jsxDEV","News","constructor","handleNextClick","nextPage","state","page","Math","ceil","totalArticles","props","pageSize","updateNews","handlePreviousClick","previousPage","articles","loading","country","category","url","setState","response","fetch","parsedData","json","totalResults","error","console","componentDidMount","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","element","title","slice","description","imageUrl","urlToImage","newsUrl","author","date","publishedAt","source","name","disabled","type","onClick","defaultProps","propTypes","string","number"],"sources":["E:/PROGRAMMING/Web Development/React.js/project-2/src/Components/News.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport Newsitems from \"./Newsitems\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default class News extends Component {\r\n  // Default props to define the default values for the component\r\n  static defaultProps = {\r\n    country: \"us\", // Default country is \"us\"\r\n    pageSize: 9, // Default number of articles per page\r\n    category: \"general\", // Default category is \"general\"\r\n  };\r\n\r\n  // Prop validation for the component\r\n  static propTypes = {\r\n    country: PropTypes.string,\r\n    pageSize: PropTypes.number,\r\n    category: PropTypes.string,\r\n  };\r\n\r\n  // Initialize the state in the constructor\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      articles: [], // Holds the news articles fetched from the API\r\n      loading: false, // Loading state to manage the spinner or indicator\r\n      page: 1, // Current page for pagination\r\n      totalArticles: 0, // Total number of articles available\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Function to fetch and update news articles.\r\n   * Accepts an optional page number as a parameter.\r\n   */\r\n  async updateNews(page = this.state.page) {\r\n    // Destructure props for cleaner code\r\n    const { country, category, pageSize } = this.props;\r\n\r\n    // Construct the API URL with query parameters\r\n    let url = `https://newsapi.org/v2/top-headlines?country=${country}&category=${category}&apiKey=062cfa709b6d45a68425747443409336&page=${page}&pageSize=${pageSize}`;\r\n\r\n    // Set the loading state to true before making the API call\r\n    this.setState({ loading: true });\r\n\r\n    try {\r\n      // Fetch data from the API\r\n      let response = await fetch(url);\r\n      let parsedData = await response.json(); // Parse the JSON response\r\n\r\n      // Update the state with the fetched articles and total results\r\n      this.setState({\r\n        articles: parsedData.articles,\r\n        totalArticles: parsedData.totalResults,\r\n        loading: false, // Stop loading once data is fetched\r\n        page: page, // Update the current page\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching news:\", error);\r\n      this.setState({ loading: false }); // Stop loading on error\r\n    }\r\n  }\r\n\r\n  // Lifecycle method to fetch news after the component mounts\r\n  componentDidMount() {\r\n    this.updateNews(); // Initial call to fetch news\r\n  }\r\n\r\n  // Event handler for \"Next Page\" button\r\n  handleNextClick = () => {\r\n    const nextPage = this.state.page + 1;\r\n    // Ensure the next page does not exceed the total pages available\r\n    if (nextPage <= Math.ceil(this.state.totalArticles / this.props.pageSize)) {\r\n      this.updateNews(nextPage);\r\n    }\r\n  };\r\n\r\n  // Event handler for \"Previous Page\" button\r\n  handlePreviousClick = () => {\r\n    const previousPage = this.state.page - 1;\r\n    // Ensure the previous page is not less than 1\r\n    if (previousPage >= 1) {\r\n      this.updateNews(previousPage);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container my-3\">\r\n        <h1 className=\"text-center\">Top News Headlines</h1>\r\n\r\n        {/* Display a loading spinner or text when data is being fetched */}\r\n        {this.state.loading && <p>Loading...</p>}\r\n\r\n        {/* Render the news articles */}\r\n        <div className=\"row\">\r\n          {!this.state.loading &&\r\n            this.state.articles.map((element) => (\r\n              <div className=\"col-md-4\" key={element.url}>\r\n                <Newsitems\r\n                  title={element.title ? element.title.slice(0, 40) : \" \"}\r\n                  description={\r\n                    element.description\r\n                      ? element.description.slice(0, 80)\r\n                      : \" \"\r\n                  }\r\n                  imageUrl={element.urlToImage}\r\n                  newsUrl={element.url}\r\n                  author={element.author}\r\n                  date={element.publishedAt}\r\n                  source={element.source.name}\r\n                />\r\n              </div>\r\n            ))}\r\n        </div>\r\n\r\n        {/* Pagination controls */}\r\n        <div className=\"container d-flex justify-content-between\">\r\n          <button\r\n            disabled={this.state.page <= 1} // Disable button on the first page\r\n            type=\"button\"\r\n            onClick={this.handlePreviousClick}\r\n            className=\"btn btn-dark my-2 mx-2\"\r\n          >\r\n            &larr; Previous Page\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            disabled={\r\n              this.state.page >=\r\n              Math.ceil(this.state.totalArticles / this.props.pageSize)\r\n            } // Disable button on the last page\r\n            className=\"btn btn-dark my-2 mx-2\"\r\n            onClick={this.handleNextClick}\r\n          >\r\n            Next Page &rarr;\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}